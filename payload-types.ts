/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    sites: Site;
    images: Image;
    users: User;
    notes: Note;
    posts: Post;
    collections: Collection;
    questions: Question;
    entries: Entry;
    notetypes: Notetype;
  };
  globals: {};
}
export interface Site {
  name: string;
  featured?: boolean;
  type: 'core' | 'custom';
  subdomain?: string;
  owner?: string | User;
  admins?: string[] | User[];
  icon?: string | Image;
  banner?: string | Image;
  id: string;
  createdAt: string;
  updatedAt: string;
}
export interface User {
  id: string;
  username?: string;
  roles?: ('admin' | 'user')[];
  sites?: string[] | Site[];
  avatar?: string | Image;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  _verified?: boolean;
  _verificationToken?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface Image {
  id: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  createdAt: string;
  updatedAt: string;
}
export interface Note {
  id: string;
  author: string | User;
  mdx: string;
  source?: string;
  html?: string;
  data: {
    endpoints?: string;
    id?: string;
  }[];
  ui?: string | Notetype;
  _status?: 'draft' | 'published';
  createdAt: string;
  updatedAt: string;
}
export interface Notetype {
  name: string;
  id: string;
  description?: string;
  createdAt: string;
  updatedAt: string;
}
export interface Post {
  id: string;
  title: string;
  publishedAt?: string;
  author: string | User;
  site: string | Site;
  banner?: string | Image;
  notes?: string[] | Note[];
  isPublished?: boolean;
  createdAt: string;
  updatedAt: string;
}
export interface Collection {
  id: string;
  name: string;
  slug: string;
  site?: string | Site;
  icon?: string | Image;
  createdAt: string;
  updatedAt: string;
}
export interface Question {
  id: string;
  title: string;
  author: string | User;
  site: string | Site;
  question?: string | Note;
  answers?: string[] | Note[];
  isPublished?: boolean;
  createdAt: string;
  updatedAt: string;
}
export interface Entry {
  id: string;
  name: string;
  collectionEntity?: string | Collection;
  icon?: string | Image;
  notes?: string[] | Note[];
  createdAt: string;
  updatedAt: string;
}
